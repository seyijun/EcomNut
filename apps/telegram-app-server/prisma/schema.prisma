datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Match {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  date      DateTime?
  winner    String?
  loser     String?
  bets      Bet[]
}

model Hamster {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  strength  Int?
  speed     Int?
  health    Int?
  owner     String?
  bets      Bet[]
}

model Bet {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  amount    Int?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  match     Match?   @relation(fields: [matchId], references: [id])
  matchId   String?
  hamster   Hamster? @relation(fields: [hamsterId], references: [id])
  hamsterId String?
}

model Notification {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isRead    Boolean?
  content   String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  firstName     String?
  lastName      String?
  username      String         @unique
  email         String?        @unique
  password      String
  roles         Json
  telegramId    String?
  score         Int?
  bets          Bet[]
  notifications Notification[]
}
